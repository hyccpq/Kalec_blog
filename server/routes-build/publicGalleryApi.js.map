{"version":3,"sources":["../routes/publicGalleryApi.js"],"names":["controller","get","put","del","post","required","auth","admin","fileUpload","resData","getAllGallery","getOneGalleryImages","PublicGalleryApi","getGallery","ctx","next","pageNum","pageSize","request","query","data","body","e","toString","getOneAlbumContent","id","Error"],"mappings":";;;;AAAA,SACEA,UADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,IAPF,EAQEC,KARF,EASEC,UATF,QAUO,qBAVP;AAWA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SACEC,aADF,EAEEC,mBAFF,QAGO,+BAHP;IAMqBC,gB,WADpBZ,UAAU,CAAC,qBAAD,C,UAERC,GAAG,CAAC,eAAD,C,UAYHA,GAAG,CAAC,uBAAD,C,2BAdN,MACqBW,gBADrB,CACsC;AAEpB,QAAVC,UAAU,CAACC,GAAD,EAAMC,IAAN,EAAY;AAC1B,QAAI;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAwBH,GAAG,CAACI,OAAJ,CAAYC,KAAxC;;AACA,QAAI;AACF,UAAIC,IAAI,GAAG,MAAMV,aAAa,CAAC,KAAD,EAAQ;AAAEM,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAR,CAA9B;AACAH,MAAAA,GAAG,CAACO,IAAJ,GAAWZ,OAAO,CAAC,CAAD,EAAI,MAAJ,EAAYW,IAAZ,CAAlB;AACD,KAHD,CAGE,OAAOE,CAAP,EAAU;AACVR,MAAAA,GAAG,CAACO,IAAJ,GAAWZ,OAAO,CAAC,CAAD,EAAI,MAAJ,EAAYa,CAAC,CAACC,QAAF,EAAZ,CAAlB;AACA,YAAMD,CAAN;AACD;AACF;;AAGuB,QAAlBE,kBAAkB,CAACV,GAAD,EAAMC,IAAN,EAAY;AAClC,QAAI;AAAEU,MAAAA;AAAF,QAASX,GAAG,CAACI,OAAJ,CAAYC,KAAzB;;AACA,QAAI;AACF,UAAIM,EAAJ,EAAQ;AACN,YAAIL,IAAI,GAAG,MAAMT,mBAAmB,CAACc,EAAD,CAApC;AACAX,QAAAA,GAAG,CAACO,IAAJ,GAAWZ,OAAO,CAAC,CAAD,EAAI,MAAJ,EAAYW,IAAZ,CAAlB;AACD,OAHD,MAGO;AACL,cAAM,IAAIM,KAAJ,CAAU,MAAV,CAAN;AACD;AACF,KAPD,CAOE,OAAOJ,CAAP,EAAU;AACVR,MAAAA,GAAG,CAACO,IAAJ,GAAWZ,OAAO,CAAC,CAAD,EAAI,MAAJ,EAAYa,CAAC,CAACC,QAAF,EAAZ,CAAlB;AACA,YAAMD,CAAN;AACD;AACF;;AA3BmC,C;SAAjBV,gB","sourcesContent":["import {\n  controller,\n  get,\n  put,\n  del,\n  post,\n  required,\n  auth,\n  admin,\n  fileUpload\n} from '../lib/decorator.js'\nimport { resData } from '../lib/util.js'\nimport {\n  getAllGallery,\n  getOneGalleryImages\n} from '../service/getAdminGallery.js'\n\n@controller('/api/public/gallery')\nexport default class PublicGalleryApi {\n  @get('/photo_albums')\n  async getGallery(ctx, next) {\n    let { pageNum, pageSize } = ctx.request.query\n    try {\n      let data = await getAllGallery(false, { pageNum, pageSize })\n      ctx.body = resData(1, '查询成功', data)\n    } catch (e) {\n      ctx.body = resData(0, '查询出错', e.toString())\n      throw e\n    }\n  }\n\n  @get('/photo_albums/content')\n  async getOneAlbumContent(ctx, next) {\n    let { id } = ctx.request.query\n    try {\n      if (id) {\n        let data = await getOneGalleryImages(id)\n        ctx.body = resData(1, '查询成功', data)\n      } else {\n        throw new Error('未知错误')\n      }\n    } catch (e) {\n      ctx.body = resData(0, '查询出错', e.toString())\n      throw e\n    }\n  }\n}\n"],"file":"publicGalleryApi.js"}