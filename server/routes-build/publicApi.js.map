{"version":3,"sources":["../routes/publicApi.js"],"names":["controller","get","post","required","compresCaptcha","getArticle","searchOneArticle","getAllTagsAndClassic","saveMark","saveReply","createCaptchas","resData","PublicApiControllers","indexPage","ctx","next","query","request","result","parseInt","page","body","e","toString","searchOne","id","searchAllTags","tagList","addMark","_id","user","email","content","console","log","markData","isManage","addReply","markId","replyUser","replyData","getCaptcha","captcha","session","text","data","compressCaptchaAll"],"mappings":"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","sourcesContent":["import {\n  controller,\n  get,\n  post,\n  required,\n  compresCaptcha\n} from '../lib/decorator.js'\n\nimport {\n  getArticle,\n  searchOneArticle,\n  getAllTagsAndClassic,\n  saveMark,\n  saveReply,\n  createCaptchas\n} from '../service/getArticleInfo.js'\nimport { resData } from '../lib/util.js'\n\n@controller('/api/public')\nexport default class PublicApiControllers {\n  static isManage = false\n\n  @get('/indexPage')\n  async indexPage(ctx, next) {\n    let query = ctx.request.query\n    try {\n      let result = await getArticle(parseInt(query.page), query)\n      ctx.body = resData(1, '查询成功', result)\n    } catch (e) {\n      ctx.body = resData(0, '查询出错', e.toString())\n      throw e\n    }\n  }\n\n  @get('/searchOne')\n  async searchOne(ctx, next) {\n    let { id } = ctx.request.query\n    try {\n      let result = await searchOneArticle(id)\n      ctx.body = resData(1, '查询成功', result)\n    } catch (e) {\n      ctx.body = resData(0, '查询出错')\n      throw e\n    }\n  }\n\n  @get('/searchAllTags')\n  async searchAllTags(ctx, next) {\n    try {\n      let tagList = await getAllTagsAndClassic()\n      ctx.body = resData(1, '查询成功', tagList)\n    } catch (e) {\n      ctx.body = resData(0, '查询出错')\n      throw e\n    }\n  }\n\n  // @get(\"/searchClassic\")\n  // async searchClassic (ctx, next) {\n  //\n  // }\n  //\n  // @get(\"/searchTag\")\n  // async searchTag (ctx, next) {\n  //\n  // }\n\n  @post('/addMark')\n  @compresCaptcha\n  async addMark(ctx, next) {\n    let { _id, user, email, content } = ctx.request.body\n    console.log(ctx.request.body)\n    try {\n      if (_id && user && email && content) {\n        let markData = await saveMark(\n          _id,\n          user,\n          email,\n          content,\n          PublicApiControllers.isManage\n        )\n\n        ctx.body = resData(1, '查询成功', markData)\n      } else {\n        throw '信息不全'\n      }\n    } catch (e) {\n      ctx.body = resData(0, '查询出错', e.toString())\n      throw e\n    }\n  }\n\n  @post('/addReply')\n  @compresCaptcha\n  async addReply(ctx, next) {\n    let { _id, markId, user, replyUser, email, content } = ctx.request.body\n    try {\n      if (_id && markId && user && email && content) {\n        let replyData = await saveReply(\n          _id,\n          markId,\n          user,\n          replyUser,\n          email,\n          content,\n          PublicApiControllers.isManage\n        )\n        ctx.body = resData(1, '查询成功', replyData)\n      } else {\n        throw '信息不全'\n      }\n    } catch (e) {\n      ctx.body = resData(0, '查询出错', e.toString())\n      throw e\n    }\n  }\n\n  // @get(\"/addLike\")\n  // async addLike (ctx, next) {\n  //\n  // }\n\n  @get('/getCaptcha')\n  async getCaptcha(ctx, next) {\n    try {\n      let captcha = await createCaptchas()\n      ctx.session.captcha = captcha.text\n      ctx.body = resData(1, '查询成功', captcha.data)\n    } catch (e) {\n      ctx.body = resData(0, '查询出错', e.toString())\n      throw e\n    }\n  }\n\n  @post('/compressCaptcha')\n  @compresCaptcha\n  async compressCaptchaAll(ctx, next) {\n    ctx.body = resData(1, '验证成功', true)\n  }\n}\n"],"file":"publicApi.js"}